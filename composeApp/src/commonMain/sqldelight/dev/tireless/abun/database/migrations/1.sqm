ALTER TABLE task ADD COLUMN estimate_minutes INTEGER NOT NULL DEFAULT 45;
ALTER TABLE task ADD COLUMN planned_date TEXT;
ALTER TABLE task ADD COLUMN planned_start TEXT;
ALTER TABLE task ADD COLUMN state TEXT NOT NULL DEFAULT 'Ready';
ALTER TABLE task ADD COLUMN actual_minutes INTEGER;
ALTER TABLE note ADD COLUMN pinned INTEGER NOT NULL DEFAULT 0;

CREATE TABLE IF NOT EXISTS tag (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  path TEXT NOT NULL,
  color_hex TEXT NOT NULL,
  domains TEXT NOT NULL,
  description TEXT,
  created_at INTEGER NOT NULL,
  updated_at INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS task_tag (
  task_id INTEGER NOT NULL,
  tag_id INTEGER NOT NULL,
  PRIMARY KEY (task_id, tag_id),
  FOREIGN KEY (task_id) REFERENCES task (id) ON DELETE CASCADE,
  FOREIGN KEY (tag_id) REFERENCES tag (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS task_log (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  task_id INTEGER NOT NULL,
  state_after TEXT NOT NULL,
  started_at TEXT NOT NULL,
  ended_at TEXT NOT NULL,
  actual_minutes INTEGER NOT NULL,
  note TEXT,
  created_at INTEGER NOT NULL,
  FOREIGN KEY (task_id) REFERENCES task (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS note_tag (
  note_id INTEGER NOT NULL,
  tag_id INTEGER NOT NULL,
  PRIMARY KEY (note_id, tag_id),
  FOREIGN KEY (note_id) REFERENCES note (id) ON DELETE CASCADE,
  FOREIGN KEY (tag_id) REFERENCES tag (id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS planner_task_log;
DROP TABLE IF EXISTS planner_task_tag;
DROP TABLE IF EXISTS planner_task;
DROP TABLE IF EXISTS rich_note_tag;
DROP TABLE IF EXISTS rich_note;
